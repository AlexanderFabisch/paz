import pytest
import numpy as np
from paz.backend.image import load_image
from handpose import MANOHandPoseEstimation


@pytest.fixture
def hand1():
    image = load_image('images/hand1.jpg')
    return image


@pytest.fixture
def labeled_joint_angles_hand1():
    return np.array([[2.28569608, -0.99500681, -1.17331739],
                     [-0.05234046, -0.37767278,  0.02938481],
                     [0.10260237, -0.08946188,  0.14585055],
                     [0.04182146,  0.09383594, -0.02831295],
                     [-0.09278133, -0.15168895, -0.04497768],
                     [0.02578889,  0.19860109, -0.0884941],
                     [0.05443261,  0.0545024,  -0.09481946],
                     [-0.23188335,  0.26730428, -0.60506086],
                     [-0.02884042, -0.0307899, -0.23044028],
                     [-0.18883955,  0.03504141, -0.02826971],
                     [0.05145917, -0.17578856,  0.01580718],
                     [0.08469487,  0.18041605, -0.11630792],
                     [0.0532839,   0.1068764,  -0.02632524],
                     [0.57428012, -0.17618363, -0.36224562],
                     [-0.17598336,  0.06082862, -0.01058997],
                     [0.24266373, -0.13877358, -0.22784984],
                     [0, 0, 0],
                     [0, 0, 0],
                     [0, 0, 0],
                     [0, 0, 0],
                     [0, 0, 0]])


@pytest.fixture
def labeled_absolute_joint_angle_quaternions_hand1():
    return np.array([[0.19199744, 0.81415963, -0.3544191,  -0.41793293],
                     [0.16420585, 0.80772954, -0.38858178, -0.4118418],
                     [0.11530527, 0.70576584, -0.41340244, -0.5636468],
                     [0.10116018, 0.6528946,  -0.49674714, -0.5627944],
                     [0.18155277, 0.810568,   -0.36778036, -0.418038],
                     [0.1810969, 0.77534914, -0.34241626, -0.49878713],
                     [0.1819435, 0.8375898,  -0.29459965, -0.4225529],
                     [0.20975895, 0.79502004, -0.36052233, -0.44041803],
                     [0.20398371, 0.88738155, -0.02549426, -0.41266766],
                     [0.16752236, 0.87495834,  0.07949504, -0.44728598],
                     [0.18697345, 0.8059152,  -0.3456335, -0.44280824],
                     [0.13863578, 0.76572317, -0.3783229, -0.50131816],
                     [0.11032259, 0.83356464, -0.3400805, -0.42112258],
                     [0.18558612, 0.7888113,  -0.40498635, -0.4234627],
                     [0.15768118, -0.82830626,  0.3755014, 0.38476503],
                     [0.07484794, -0.8522329,   0.3404722, 0.3900969],
                     [0.10270251, 0.68750393, -0.49382275, -0.52242666],
                     [0.14682479, 0.86644256, -0.2609031, -0.39956132],
                     [0.24151446, 0.86174965, 0.13656569, -0.42474473],
                     [0.10054481, 0.86190784, -0.33380067, -0.36821562],
                     [0.24417575, -0.8410403, 0.28029647, 0.39301836]])


@pytest.fixture
def labeled_global_pos_joints_hand1():
    return np.array([[-2.1095730e-01,  2.3746040e-01,  7.2351831e-01],
                     [-1.7486389e-01, -1.8858640e-02, -1.5466252e-01],
                     [-9.0742052e-02, -4.0452784e-01, -4.2383325e-01],
                     [-1.2175053e-01, -5.8097839e-01, -5.8229560e-01],
                     [-4.3585762e-09,  9.7836210e-09, -5.6013496e-09],
                     [2.8395301e-01, -4.0608984e-01, -2.2989722e-01],
                     [4.8385200e-01, -5.1372266e-01, -4.3877763e-01],
                     [-2.6156064e-02, -5.7355270e-02,  3.1983301e-01],
                     [6.7700726e-01,  1.6054958e-01, -3.8239870e-02],
                     [8.3818066e-01,  1.3827196e-01, -2.7829593e-01],
                     [4.1573428e-02, -4.7410838e-03,  1.4039090e-01],
                     [3.4360024e-01, -3.8029122e-01, -1.1138804e-01],
                     [6.3677025e-01, -3.9860457e-01, -2.7207798e-01],
                     [-1.6462585e-01,  3.9620602e-01,  6.2095523e-02],
                     [2.8221944e-01,  2.4856496e-01, -6.6663690e-02],
                     [8.2427993e-02,  2.2169314e-01, -3.2478195e-01],
                     [-1.8447973e-01, -8.4150827e-01, -7.5902623e-01],
                     [7.1065754e-01, -6.1353797e-01, -5.6427538e-01],
                     [9.9565113e-01,  7.2777450e-02, -2.9398090e-01],
                     [7.4763477e-01, -5.9318924e-01, -3.9086705e-01],
                     [-3.0818272e-01,  7.9595578e-01, -6.1133540e-01]])


def test_MANOHandPoseEstimationHand1(
    hand1, labeled_joint_angles_hand1, labeled_global_pos_joints_hand1,
        labeled_absolute_joint_angle_quaternions_hand1):
    detect = MANOHandPoseEstimation()
    inferences = detect(hand1)

    assert np.allclose(inferences['joint_angles'],
                       labeled_joint_angles_hand1)
    assert np.allclose(inferences['absolute_joint_angle_quaternions'],
                       labeled_absolute_joint_angle_quaternions_hand1)
    assert np.allclose(inferences['global_pos_joints'],
                       labeled_global_pos_joints_hand1)


@pytest.fixture
def hand2():
    image = load_image('images/hand2.jpg')
    return image


@pytest.fixture
def labeled_joint_angles_hand2():
    return np.array([[0.57698281, -1.23102328, -1.32445876],
                     [-0.02269107, 0.15549264, -0.30969009],
                     [0.07216314, 0.26474501, -0.27345422],
                     [-0.12026365, 0.0824455, 0.17693569],
                     [0.04203635, 0.06020462, -0.0365985],
                     [-0.03446851, 0.07637428, -0.03183696],
                     [-0.03941265, 0.0167791, 0.02832737],
                     [-0.00877976, -0.09602834, 0.06576443],
                     [0.04837527, 0.1612745, -0.11100869],
                     [-0.06054797, 0.00548053, 0.11985581],
                     [-0.41350556, -0.34537178, -0.94545926],
                     [-0.59089626, -0.39523044, -0.86676232],
                     [-0.30254008, -0.26008032, -0.65218166],
                     [0.62729518, 0.16237222, -0.38125173],
                     [-0.43760968, -0.06954113, 0.3268831],
                     [0.31357056, -0.08684532, -0.07888354],
                     [0, 0, 0],
                     [0, 0, 0],
                     [0, 0, 0],
                     [0, 0, 0],
                     [0, 0, 0]])



@pytest.fixture
def labeled_absolute_joint_angle_quaternions_hand2():
    return np.array([[0.5824839, 0.24709614, -0.52719265, -0.5672069],
                     [0.5727997, 0.23487537, -0.5364073, -0.5735863],
                     [0.5199609, 0.35189113, -0.4413698, -0.64109755],
                     [0.46857193, 0.508259, -0.33989158, -0.63764167],
                     [0.57870656, 0.22757065, -0.54837793, -0.5590994],
                     [0.5797125, 0.2663967, -0.5380858, -0.5508448],
                     [0.5954953, 0.2857324, -0.50168586, -0.55861753],
                     [0.561818, 0.25405127, -0.5530585, -0.5603077],
                     [0.5538503, 0.20609094, -0.5849676, -0.5555081],
                     [0.5623699, 0.29554972, -0.5394049, -0.5526598],
                     [0.5807689, 0.21778364, -0.5547551, -0.55454904],
                     [0.19919324, 0.23048927, -0.3630326, -0.88057035],
                     [0.19669317, -0.12358135, 0.00332527, 0.9726399],
                     [0.59735745, 0.22104631, -0.51189584, -0.57642454],
                     [0.42121333, 0.52959234, -0.56420475, -0.4730586],
                     [0.576743, 0.31134877, -0.5406815, -0.5273454],
                     [0.5662599, 0.47303268, -0.32499462, -0.59158117],
                     [0.61304885, 0.27148557, -0.4895646, -0.5574883],
                     [0.60461324, 0.24708255, -0.5376274, -0.5332446],
                     [0.47417653, -0.0213297, -0.2047728, 0.85601974],
                     [0.47602287, 0.3954336, -0.62812185, -0.47169647]])


@pytest.fixture
def labeled_global_pos_joints_hand2():
    return np.array([[1.88204318e-01, 9.44696367e-01, -2.85254031e-01],
                     [-1.68596566e-01, -3.27465832e-02, -3.04927565e-02],
                     [-2.42465436e-01, -3.26091886e-01, 7.05712736e-02],
                     [-3.31479609e-01, -2.56886125e-01, 1.35164917e-01],
                     [1.50139723e-09, -5.24702912e-08, 4.69054022e-08],
                     [-8.45689327e-02, -4.25698161e-01, 1.69801623e-01],
                     [3.34348083e-02, -1.58395037e-01, 3.19741607e-01],
                     [1.26788139e-01, 1.49171457e-01, -2.84757078e-01],
                     [1.47574633e-01, -2.91041166e-01, -2.62394130e-01],
                     [1.76235601e-01, -3.48354697e-01, -2.34699249e-01],
                     [8.34700372e-03, 1.77722014e-02, -1.23329580e-01],
                     [7.72100240e-02, -2.85815865e-01, 1.09545663e-01],
                     [5.86296394e-02, -1.07758425e-01, 1.48863643e-01],
                     [-2.22503901e-01, 6.93074882e-01, -1.66780204e-01],
                     [-5.12608647e-01, 4.48076338e-01, -3.23797494e-01],
                     [-6.83783770e-01, 1.60146341e-01, -1.59252822e-01],
                     [-1.72300071e-01, -9.23789740e-01, -5.08257858e-02],
                     [-5.12108281e-02, -9.74470556e-01, 6.97554424e-02],
                     [4.66863871e-01, -5.40571451e-01, -1.17076010e-01],
                     [-1.40209913e-01, 1.84701145e-01, 5.77604286e-02],
                     [-8.99124742e-01, 3.55229266e-02, -2.03630298e-01]])


def test_MANOHandPoseEstimationHand2(
    hand2, labeled_joint_angles_hand2, labeled_global_pos_joints_hand2,
        labeled_absolute_joint_angle_quaternions_hand2):
    detect = MANOHandPoseEstimation()
    inferences = detect(hand2)

    assert np.allclose(inferences['joint_angles'],
                       labeled_joint_angles_hand2)
    assert np.allclose(inferences['absolute_joint_angle_quaternions'],
                       labeled_absolute_joint_angle_quaternions_hand2)
    assert np.allclose(inferences['global_pos_joints'],
                       labeled_global_pos_joints_hand2)


@pytest.fixture
def hand3():
    image = load_image('images/hand3.jpg')
    return image


@pytest.fixture
def labeled_joint_angles_hand3():
    return np.array([[1.09563343, -1.17513187, -1.30879281],
                     [0.03904919, -0.20308109, -0.14691783],
                     [0.12739036, -0.01205808, 0.02912878],
                     [0.00357071, 0.09283272, 0.13721532],
                     [-0.06334209, -0.1823658, -0.0554386],
                     [0.07477282, 0.12665718, 0.03389183],
                     [0.05278521, 0.07343185, 0.0428882],
                     [0.1539855, 0.02559035, 0.10746181],
                     [-0.00676416, 0.11960176, 0.01735973],
                     [-0.03726523, -0.01927221, 0.10530026],
                     [-0.00216638, 0.02094202, -0.02007401],
                     [0.01186635, 0.11227486, 0.05650959],
                     [-0.04638484, 0.04055199, 0.03422455],
                     [0.46056064, 0.00398775, -0.10392849],
                     [-0.30226583, 0.04108065, 0.07109164],
                     [0.28039451, -0.01715324, -0.09664542],
                     [0, 0, 0],
                     [0, 0, 0],
                     [0, 0, 0],
                     [0, 0, 0],
                     [0, 0, 0]])




@pytest.fixture
def labeled_absolute_joint_angle_quaternions_hand3():
    return np.array([[0.5095514, 0.45492572, -0.48793483, -0.5434331],
                     [0.512773, 0.44336197, -0.4768176, -0.5595883],
                     [0.41073728, 0.4280492, -0.5033298, -0.6282737],
                     [0.3887197, 0.44216067, -0.55094033, -0.59148604],
                     [0.5071986, 0.45823014, -0.48125702, -0.54878646],
                     [0.46013612, 0.40324658, -0.49497035, -0.61698574],
                     [0.4855262, 0.44994125, -0.4943212, -0.5634391],
                     [0.5025514, 0.45700356, -0.49050486, -0.545889],
                     [0.5007176, 0.47424686, -0.548369, -0.47293052],
                     [0.5382792, 0.49519366, -0.5199553, -0.44123155],
                     [0.5034627, 0.4539964, -0.49254903, -0.5457181],
                     [0.5035812, 0.46406054, -0.4820776, -0.54649323],
                     [0.5423021, 0.48316845, -0.4692099, -0.50229335],
                     [0.5078602, 0.46146458, -0.46464542, -0.55967224],
                     [0.3605959, 0.58955854, -0.5546843, -0.46337536],
                     [0.4726715, 0.51791084, -0.4916449, -0.5163677],
                     [0.45267522, 0.43100485, -0.56238383, -0.5413359],
                     [0.5032675, 0.47226965, -0.50039226, -0.5227723],
                     [0.5648475, 0.45276386, -0.5421457, -0.42664993],
                     [0.5712743, 0.47244862, -0.4545446, -0.4937886],
                     [0.36606178, 0.5974894, -0.5374625, -0.4691899]])


@pytest.fixture
def labeled_global_pos_joints_hand3():
    return np.array([[8.1149392e-02, 9.7421163e-01, 1.4497130e-01],
                     [-2.4719435e-01, 2.7672350e-02, 4.0200585e-03],
                     [-3.9584926e-01, -3.8725662e-01, 2.4722364e-02],
                     [-5.2944553e-01, -6.5712583e-01, -9.3531311e-03],
                     [-5.1799698e-10, -4.2153703e-10, 1.5513901e-09],
                     [-5.6642253e-02, -4.1693839e-01, 3.8588528e-02],
                     [-3.8486376e-02, -7.2283918e-01, -9.7781003e-02],
                     [4.3955427e-01, 1.8262622e-01, -1.4219971e-01],
                     [6.2215132e-01, -1.4008403e-01, -1.0473878e-01],
                     [7.1468371e-01, -2.8577697e-01, -6.9761820e-02],
                     [1.9138500e-01, 4.7994040e-02, -7.5710773e-02],
                     [3.0327004e-01, -3.1055903e-01, -1.3556108e-03],
                     [4.3489704e-01, -5.7546860e-01, -5.6770772e-02],
                     [-2.6034012e-01, 7.2023141e-01, 5.6327134e-03],
                     [-5.0139296e-01, 4.7852150e-01, -1.5718439e-01],
                     [-6.9825906e-01, 2.3603703e-01, -2.8884244e-01],
                     [-5.5761278e-01, -9.2161906e-01, -6.2653527e-02],
                     [-2.7442642e-02, -1.0280274e+00, -4.9207374e-02],
                     [8.4589291e-01, -4.8254442e-01, -7.4146524e-02],
                     [5.2343649e-01, -9.2888176e-01, -7.5384378e-02],
                     [-8.9133555e-01, 4.9607728e-02, -3.4057701e-01]])


def test_MANOHandPoseEstimationHand3(
    hand3, labeled_joint_angles_hand3, labeled_global_pos_joints_hand3,
        labeled_absolute_joint_angle_quaternions_hand3):
    detect = MANOHandPoseEstimation()
    inferences = detect(hand3)

    assert np.allclose(inferences['joint_angles'],
                       labeled_joint_angles_hand3)
    assert np.allclose(inferences['absolute_joint_angle_quaternions'],
                       labeled_absolute_joint_angle_quaternions_hand3)
    assert np.allclose(inferences['global_pos_joints'],
                       labeled_global_pos_joints_hand3)
